{"version":3,"sources":["js/formHandler.js"],"names":["handleFormSubmit","event","preventDefault","form","email","target","data","getFormData","elements","fields","Object","keys","filter","k","name","map","undefined","length","item","pos","self","indexOf","formData","forEach","element","value","i","checked","selected","push","join","formDataNameOrder","JSON","stringify","formGoogleSheetName","dataset","sheet","formGoogleSendEmail","console","log","test","invalidEmail","querySelector","style","display","disableAllButtons","buttons","querySelectorAll","disabled","url","action","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","status","statusText","responseText","formElements","thankYouMessage","encoded","encodeURIComponent","send","document","addEventListener","loaded","forms"],"mappings":";CAAA,WA4DWA,SAAAA,EAAiBC,GACxBA,EAAMC,iBACFC,IA7DcC,EA6DdD,EAAOF,EAAMI,OACbC,EAhDGC,SAAYJ,GACfK,IAAAA,EAAWL,EAAKK,SAEhBC,EAASC,OAAOC,KAAKH,GAAUI,OAAO,SAASC,GACrCL,MAAqB,aAArBA,EAASK,GAAGC,OACvBC,IAAI,SAASF,GACXL,YAAqBQ,IAArBR,EAASK,GAAGC,KACNN,EAASK,GAAGC,KAEZN,EAASK,GAAGI,OAAS,EACrBT,EAASK,GAAGK,KAAK,GAAGJ,UADvB,IAGLF,OAAO,SAASM,EAAMC,EAAKC,GACrBA,OAAAA,EAAKC,QAAQH,IAASC,GAAOD,IAGlCI,EAAW,GA0BRA,OAzBPb,EAAOc,QAAQ,SAAST,GAClBU,IAAAA,EAAUhB,EAASM,GAMnBU,GAHJF,EAASR,GAAQU,EAAQC,MAGrBD,EAAQP,OAAQ,CAEb,IADDX,IAAAA,EAAO,GACFoB,EAAI,EAAGA,EAAIF,EAAQP,OAAQS,IAAK,CACnCR,IAAAA,EAAOM,EAAQN,KAAKQ,IACpBR,EAAKS,SAAWT,EAAKU,WACvBtB,EAAKuB,KAAKX,EAAKO,OAGnBH,EAASR,GAAQR,EAAKwB,KAAK,SAK/BR,EAASS,kBAAoBC,KAAKC,UAAUxB,GAC5Ca,EAASY,oBAAsB/B,EAAKgC,QAAQC,OAAS,YACrDd,EAASe,oBAAsBlC,EAAKgC,QAAQ/B,OAAS,GAErDkC,QAAQC,IAAIjB,GACLA,EAMIf,CAAYJ,GAQnBG,GAAAA,EAAKF,QAtESA,EAsEYE,EAAKF,OArE1B,qFACCoC,KAAKpC,IAoE6B,CACtCqC,IAAAA,EAAetC,EAAKuC,cAAc,kBAClCD,GAAAA,EAEK,OADPA,EAAaE,MAAMC,QAAU,SACtB,MAEJ,EAsCAC,SAAkB1C,GAEpB,IADD2C,IAAAA,EAAU3C,EAAK4C,iBAAiB,UAC3BrB,EAAI,EAAGA,EAAIoB,EAAQ7B,OAAQS,IAClCoB,EAAQpB,GAAGsB,UAAW,EAxCtBH,CAAkB1C,GACd8C,IAAAA,EAAM9C,EAAK+C,OACXC,EAAM,IAAIC,eACdD,EAAIE,KAAK,OAAQJ,GAEjBE,EAAIG,iBAAiB,eAAgB,qCACrCH,EAAII,mBAAqB,WACrBjB,QAAQC,IAAIY,EAAIK,OAAQL,EAAIM,YAC5BnB,QAAQC,IAAIY,EAAIO,cACZC,IAAAA,EAAexD,EAAKuC,cAAc,kBAClCiB,IACFA,EAAahB,MAAMC,QAAU,QAE3BgB,IAAAA,EAAkBzD,EAAKuC,cAAc,qBACrCkB,IACFA,EAAgBjB,MAAMC,QAAU,UAKlCiB,IAAAA,EAAUnD,OAAOC,KAAKL,GAAMS,IAAI,SAASF,GAClCiD,OAAAA,mBAAmBjD,GAAK,IAAMiD,mBAAmBxD,EAAKO,MAC9DiB,KAAK,KACRqB,EAAIY,KAAKF,IAYbG,SAASC,iBAAiB,mBARjBC,WACP5B,QAAQC,IAAI,wDAGP,IADD4B,IAAAA,EAAQH,SAASjB,iBAAiB,cAC7BrB,EAAI,EAAGA,EAAIyC,EAAMlD,OAAQS,IAChCyC,EAAMzC,GAAGuC,iBAAiB,SAAUjE,GAAkB,KAGJ,GAjHxD","file":"formHandler.9b26644f.map","sourceRoot":"..\\src","sourcesContent":["(function() {\r\n  function validEmail(email) {\r\n    var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\r\n    return re.test(email);\r\n  }\r\n\r\n  function validateHuman(honeypot) {\r\n    if (honeypot) {  //if hidden form filled up\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // get all data in form and return object\r\n  function getFormData(form) {\r\n    var elements = form.elements;\r\n\r\n    var fields = Object.keys(elements).filter(function(k) {\r\n          return (elements[k].name !== \"honeypot\");\r\n    }).map(function(k) {\r\n      if(elements[k].name !== undefined) {\r\n        return elements[k].name;\r\n      // special case for Edge's html collection\r\n      }else if(elements[k].length > 0){\r\n        return elements[k].item(0).name;\r\n      }\r\n    }).filter(function(item, pos, self) {\r\n      return self.indexOf(item) == pos && item;\r\n    });\r\n\r\n    var formData = {};\r\n    fields.forEach(function(name){\r\n      var element = elements[name];\r\n      \r\n      // singular form elements just have one value\r\n      formData[name] = element.value;\r\n\r\n      // when our element has multiple items, get their values\r\n      if (element.length) {\r\n        var data = [];\r\n        for (var i = 0; i < element.length; i++) {\r\n          var item = element.item(i);\r\n          if (item.checked || item.selected) {\r\n            data.push(item.value);\r\n          }\r\n        }\r\n        formData[name] = data.join(', ');\r\n      }\r\n    });\r\n\r\n    // add form-specific values into the data\r\n    formData.formDataNameOrder = JSON.stringify(fields);\r\n    formData.formGoogleSheetName = form.dataset.sheet || \"responses\"; // default sheet name\r\n    formData.formGoogleSendEmail = form.dataset.email || \"\"; // no email by default\r\n\r\n    console.log(formData);\r\n    return formData;\r\n  }\r\n\r\n  function handleFormSubmit(event) {  // handles form submit without any jquery\r\n    event.preventDefault();           // we are submitting via xhr below\r\n    var form = event.target;\r\n    var data = getFormData(form);         // get the values submitted in the form\r\n\r\n    /* OPTION: Remove this comment to enable SPAM prevention, see README.md\r\n    if (validateHuman(data.honeypot)) {  //if form is filled, form will not be submitted\r\n      return false;\r\n    }\r\n    */\r\n\r\n    if( data.email && !validEmail(data.email) ) {   // if email is not valid show error\r\n      var invalidEmail = form.querySelector(\".email-invalid\");\r\n      if (invalidEmail) {\r\n        invalidEmail.style.display = \"block\";\r\n        return false;\r\n      }\r\n    } else {\r\n      disableAllButtons(form);\r\n      var url = form.action;\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('POST', url);\r\n      // xhr.withCredentials = true;\r\n      xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n      xhr.onreadystatechange = function() {\r\n          console.log(xhr.status, xhr.statusText);\r\n          console.log(xhr.responseText);\r\n          var formElements = form.querySelector(\".form-elements\")\r\n          if (formElements) {\r\n            formElements.style.display = \"none\"; // hide form\r\n          }\r\n          var thankYouMessage = form.querySelector(\".thankyou_message\");\r\n          if (thankYouMessage) {\r\n            thankYouMessage.style.display = \"block\";\r\n          }\r\n          return;\r\n      };\r\n      // url encode form data for sending as post data\r\n      var encoded = Object.keys(data).map(function(k) {\r\n          return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\r\n      }).join('&');\r\n      xhr.send(encoded);\r\n    }\r\n  }\r\n  \r\n  function loaded() {\r\n    console.log(\"Contact form submission handler loaded successfully.\");\r\n    // bind to the submit event of our form\r\n    var forms = document.querySelectorAll(\"form.gform\");\r\n    for (var i = 0; i < forms.length; i++) {\r\n      forms[i].addEventListener(\"submit\", handleFormSubmit, false);\r\n    }\r\n  };\r\n  document.addEventListener(\"DOMContentLoaded\", loaded, false);\r\n\r\n  function disableAllButtons(form) {\r\n    var buttons = form.querySelectorAll(\"button\");\r\n    for (var i = 0; i < buttons.length; i++) {\r\n      buttons[i].disabled = true;\r\n    }\r\n  }\r\n})();"]}